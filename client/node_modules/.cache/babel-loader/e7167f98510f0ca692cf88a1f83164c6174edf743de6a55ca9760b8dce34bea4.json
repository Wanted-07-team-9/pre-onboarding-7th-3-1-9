{"ast":null,"code":"import { instance } from './ApiInstance';\nconst END_POINT = 'sick';\nexport const AxiosService = {\n  getCashSearch: async param => {\n    if ('caches' in window) {\n      if (param === '') return [];\n      const query = {\n        sickNm_like: param\n      };\n      const queryStr = new URLSearchParams(query).toString();\n      const cashStorage = await caches.open(END_POINT);\n      const cashedResponse = await cashStorage.match(queryStr);\n      if (!cashedResponse || !cashedResponse.ok) {\n        const config = {\n          params: query\n        };\n        const {\n          data\n        } = await instance.get(`/${END_POINT}`, config);\n        console.info('calling api');\n        cashStorage.put(`${param}`, new Response(JSON.stringify(data)));\n        return data;\n      }\n      const newCached = await (cashedResponse === null || cashedResponse === void 0 ? void 0 : cashedResponse.json());\n      return newCached;\n    }\n    return [];\n  }\n};","map":{"version":3,"names":["instance","END_POINT","AxiosService","getCashSearch","param","window","query","sickNm_like","queryStr","URLSearchParams","toString","cashStorage","caches","open","cashedResponse","match","ok","config","params","data","get","console","info","put","Response","JSON","stringify","newCached","json"],"sources":["/Users/seulgisong/Desktop/개발공부/원티드/과제5/pre-onboarding-7th-3-1-9/client/src/api/AxiosService.ts"],"sourcesContent":["import { instance } from './ApiInstance';\nimport { sickData } from '../redux/reducer/searchSlice';\nconst END_POINT = 'sick';\n\nexport const AxiosService = {\n  getCashSearch: async (param: string): Promise<sickData[]> => {\n    if ('caches' in window) {\n      if (param === '') return [];\n      const query = {\n        sickNm_like: param,\n      };\n\n      const queryStr = new URLSearchParams(query).toString();\n      const cashStorage = await caches.open(END_POINT);\n      const cashedResponse = await cashStorage.match(queryStr);\n\n      if (!cashedResponse || !cashedResponse.ok) {\n        const config = {\n          params: query,\n        };\n        const { data } = await instance.get(`/${END_POINT}`, config);\n        console.info('calling api');\n\n        cashStorage.put(`${param}`, new Response(JSON.stringify(data)));\n        return data;\n      }\n      const newCached = await cashedResponse?.json();\n\n      return newCached;\n    }\n    return [];\n  },\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AAExC,MAAMC,SAAS,GAAG,MAAM;AAExB,OAAO,MAAMC,YAAY,GAAG;EAC1BC,aAAa,EAAE,MAAOC,KAAa,IAA0B;IAC3D,IAAI,QAAQ,IAAIC,MAAM,EAAE;MACtB,IAAID,KAAK,KAAK,EAAE,EAAE,OAAO,EAAE;MAC3B,MAAME,KAAK,GAAG;QACZC,WAAW,EAAEH;MACf,CAAC;MAED,MAAMI,QAAQ,GAAG,IAAIC,eAAe,CAACH,KAAK,CAAC,CAACI,QAAQ,EAAE;MACtD,MAAMC,WAAW,GAAG,MAAMC,MAAM,CAACC,IAAI,CAACZ,SAAS,CAAC;MAChD,MAAMa,cAAc,GAAG,MAAMH,WAAW,CAACI,KAAK,CAACP,QAAQ,CAAC;MAExD,IAAI,CAACM,cAAc,IAAI,CAACA,cAAc,CAACE,EAAE,EAAE;QACzC,MAAMC,MAAM,GAAG;UACbC,MAAM,EAAEZ;QACV,CAAC;QACD,MAAM;UAAEa;QAAK,CAAC,GAAG,MAAMnB,QAAQ,CAACoB,GAAG,CAAE,IAAGnB,SAAU,EAAC,EAAEgB,MAAM,CAAC;QAC5DI,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAE3BX,WAAW,CAACY,GAAG,CAAE,GAAEnB,KAAM,EAAC,EAAE,IAAIoB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC,CAAC;QAC/D,OAAOA,IAAI;MACb;MACA,MAAMQ,SAAS,GAAG,OAAMb,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEc,IAAI,EAAE;MAE9C,OAAOD,SAAS;IAClB;IACA,OAAO,EAAE;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}