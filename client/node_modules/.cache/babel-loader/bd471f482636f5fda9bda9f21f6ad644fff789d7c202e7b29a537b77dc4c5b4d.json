{"ast":null,"code":"var _jsxFileName = \"/Users/seulgisong/Desktop/\\u1100\\u1162\\u1107\\u1161\\u11AF\\u1100\\u1169\\u11BC\\u1107\\u116E/\\u110B\\u116F\\u11AB\\u1110\\u1175\\u1103\\u1173/\\uACFC\\uC81C5/pre-onboarding-7th-3-1-9/client/src/components/Main.tsx\";\nimport * as S from '../styles/MainStyle';\nimport SearchRec from './SearchRec';\nimport InputStyle from 'styles/InputStyle';\n// import { useDispatch } from 'react-redux';\n// import { setSearchValue, setOnFocus } from 'redux/reducer/searchSlice';\n// import { useAppSelector } from 'redux/reducer/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  // const dispatch = useDispatch();\n  // const { searchWords, isOnFocus } = useAppSelector(state => state.searchData);\n\n  // const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   dispatch(setSearchValue(e.currentTarget.value));\n  //   console.log(searchWords);\n  // };\n  // const onFocusInput = () => {\n  //   setOnFocus(!isOnFocus);\n  // };\n  return /*#__PURE__*/_jsxDEV(S.MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(InputStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchRec, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["S","SearchRec","InputStyle","Main"],"sources":["/Users/seulgisong/Desktop/개발공부/원티드/과제5/pre-onboarding-7th-3-1-9/client/src/components/Main.tsx"],"sourcesContent":["import * as S from '../styles/MainStyle';\nimport SearchRec from './SearchRec';\nimport InputStyle from 'styles/InputStyle';\n// import { useDispatch } from 'react-redux';\n// import { setSearchValue, setOnFocus } from 'redux/reducer/searchSlice';\n// import { useAppSelector } from 'redux/reducer/hooks';\n\nfunction Main() {\n  // const dispatch = useDispatch();\n  // const { searchWords, isOnFocus } = useAppSelector(state => state.searchData);\n\n  // const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   dispatch(setSearchValue(e.currentTarget.value));\n  //   console.log(searchWords);\n  // };\n  // const onFocusInput = () => {\n  //   setOnFocus(!isOnFocus);\n  // };\n  return (\n    <S.MainLayout>\n      <InputStyle />\n      <SearchRec />\n    </S.MainLayout>\n  );\n}\n\nexport default Main;\n"],"mappings":";AAAA,OAAO,KAAKA,CAAC,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C;AACA;AACA;AAAA;AAEA,SAASC,IAAI,GAAG;EACd;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE,QAAC,CAAC,CAAC,UAAU;IAAA,wBACX,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEnB;AAAC,KAjBQA,IAAI;AAmBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}