{"ast":null,"code":"var _jsxFileName = \"/Users/seulgisong/Desktop/\\u1100\\u1162\\u1107\\u1161\\u11AF\\u1100\\u1169\\u11BC\\u1107\\u116E/\\u110B\\u116F\\u11AB\\u1110\\u1175\\u1103\\u1173/\\uACFC\\uC81C5/pre-onboarding-7th-3-1-9/client/src/components/RecommendWords.tsx\",\n  _s = $RefreshSig$();\nimport * as S from '../styles/MainStyle';\nimport { useAppSelector } from 'redux/reducer/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecommendWords() {\n  _s();\n  const {\n    searchData,\n    searchWords\n  } = useAppSelector(state => state.searchData);\n\n  // 배열의 객제\n  if (searchData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(S.recomText, {\n      children: \" \\uCD94\\uCC9C\\uAC80\\uC0C9\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: searchData.map((_ref, idx) => {\n      let {\n        sickNm\n      } = _ref;\n      const matchText = new RegExp(searchWords, 'g');\n      const newSickNm = sickNm.replace(matchText, `<span> ${searchData} </span>`);\n      console.log(newSickNm);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: matchText.map((el, idx) => {\n          /*#__PURE__*/_jsxDEV(S.recomText, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(RecommendWords, \"rGcafMnw4i7O/qZcFqETnSZKqcA=\", false, function () {\n  return [useAppSelector];\n});\n_c = RecommendWords;\nexport default RecommendWords;\nvar _c;\n$RefreshReg$(_c, \"RecommendWords\");","map":{"version":3,"names":["S","useAppSelector","RecommendWords","searchData","searchWords","state","length","map","idx","sickNm","matchText","RegExp","newSickNm","replace","console","log","el"],"sources":["/Users/seulgisong/Desktop/개발공부/원티드/과제5/pre-onboarding-7th-3-1-9/client/src/components/RecommendWords.tsx"],"sourcesContent":["import * as S from '../styles/MainStyle';\nimport { useAppSelector } from 'redux/reducer/hooks';\n\nfunction RecommendWords() {\n  const { searchData, searchWords } = useAppSelector(state => state.searchData);\n\n  // 배열의 객제\n  if (searchData.length === 0) {\n    return <S.recomText> 추천검색어가 없습니다... </S.recomText>;\n  }\n\n  return (\n    <div>\n      {searchData.map(({ sickNm }, idx) => {\n        const matchText = new RegExp(searchWords, 'g');\n        const newSickNm = sickNm.replace(matchText, `<span> ${searchData} </span>`);\n\n        console.log(newSickNm);\n\n        return (\n          <>\n            {matchText.map((el, idx) => {\n              <S.recomText key={idx}>\n                <span>{el}</span>\n              </S.recomText>;\n            })}\n          </>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default RecommendWords;\n"],"mappings":";;AAAA,OAAO,KAAKA,CAAC,MAAM,qBAAqB;AACxC,SAASC,cAAc,QAAQ,qBAAqB;AAAC;AAAA;AAErD,SAASC,cAAc,GAAG;EAAA;EACxB,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGH,cAAc,CAACI,KAAK,IAAIA,KAAK,CAACF,UAAU,CAAC;;EAE7E;EACA,IAAIA,UAAU,CAACG,MAAM,KAAK,CAAC,EAAE;IAC3B,oBAAO,QAAC,CAAC,CAAC,SAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B;EACpD;EAEA,oBACE;IAAA,UACGH,UAAU,CAACI,GAAG,CAAC,OAAaC,GAAG,KAAK;MAAA,IAApB;QAAEC;MAAO,CAAC;MACzB,MAAMC,SAAS,GAAG,IAAIC,MAAM,CAACP,WAAW,EAAE,GAAG,CAAC;MAC9C,MAAMQ,SAAS,GAAGH,MAAM,CAACI,OAAO,CAACH,SAAS,EAAG,UAASP,UAAW,UAAS,CAAC;MAE3EW,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;MAEtB,oBACE;QAAA,UACGF,SAAS,CAACH,GAAG,CAAC,CAACS,EAAE,EAAER,GAAG,KAAK;UAC1B,qBAAC,CAAC,CAAC,SAAS;YAAA,uBACV;cAAA,UAAOQ;YAAE;cAAA;cAAA;cAAA;YAAA;UAAQ,GADDR,GAAG;YAAA;YAAA;YAAA;UAAA,QAEP;QAChB,CAAC;MAAC,iBACD;IAEP,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA5BQN,cAAc;EAAA,QACeD,cAAc;AAAA;AAAA,KAD3CC,cAAc;AA8BvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}